1) 将代码传递给方法的功能（同时也能够返回代码并将其包含在数据结构中），通常称之为函数式编程。
2) Collection主要时为了存储和访问数据，而Stream则主要用于描述对数据的计算。
3) 谓词(Predicate)：即一个返回boolean值的函数。
4) 行为参数化：让方法接受多种行为(或者战略)作为参数，并在内部使用，来完成不同的行为。就是一个方法接受多个不同的行为作为参数，并在内部使用它们，完成不同行为的能力。
5) 可以把Lambda表达式理解为简洁地表示可传递的匿名函数的一种方式：它没有名称，但有参数列表、函数主体、返回类型，可能还有一个可以抛出的异常列表。
6) 箭头->把参数列表与Lambda主体分开。Lambda的基本语法是(parameters)->expression或者(parameters)->{statements;}.
7) 可以在函数式接口上使用Lambda表达式。函数式接口就是只定义一个抽象方法的接口。Lambda表达式直接以内联的形式为函数式接口的抽象方法提供实现，并把整个表达式作为函数式接口的实例。
8) 函数式接口的抽象方法的签名基本上就是Lambda表达式的签名，这种抽象方法叫做函数描述符。
9) @FunctionalInterface注解表示该接口会设计成一个函数式接口。
10) 任何函数式接口都不允许抛出受检异常(checked exception)。
